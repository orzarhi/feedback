generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SurveyType {
  DEFINES_ALONE
  SINGLE_CHOICE
  SHORT_ANSWER
  MULTIPLE_CHOICE
}

enum QuestionType {
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  SHORT_ANSWER
}

enum Satisfaction {
  VERY_SATISFIED
  SATISFIED
  NEUTRAL
  DISSATISFIED
  VERY_DISSATISFIED
}

model User {
  id    String @id @default(cuid())
  email String @unique

  survey   Survey[]
  response SurveyResponse[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Survey {
  id          String      @id @default(cuid())
  title       String
  description String?
  surveyType  SurveyType? @default(DEFINES_ALONE)

  questions Question[]
  user      User             @relation(fields: [userId], references: [id])
  userId    String
  response  SurveyResponse[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id           String        @id @default(cuid())
  text         String
  questionType QuestionType? @default(SINGLE_CHOICE)

  survey   Survey   @relation(fields: [surveyId], references: [id])
  surveyId String
  answers  Answer[]

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  answerResponse AnswerResponse[]
}

model Answer {
  id         String   @id @default(cuid())
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  text       String

  response   SurveyResponse? @relation(fields: [responseId], references: [id])
  responseId String?

  answerResponse AnswerResponse[]

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model SurveyResponse {
  id           String           @id @default(cuid())
  user         User             @relation(fields: [userId], references: [id])
  userId       String
  survey       Survey           @relation(fields: [surveyId], references: [id])
  surveyId     String
  answers      AnswerResponse[] 
  feedback     String?
  satisfaction Satisfaction

  answer    Answer[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AnswerResponse {
  id               String         @id @default(cuid())
  surveyResponse   SurveyResponse @relation(fields: [surveyResponseId], references: [id])
  surveyResponseId String
  question         Question       @relation(fields: [questionId], references: [id])
  questionId       String
  answer           Answer         @relation(fields: [answerId], references: [id])
  answerId         String
  text             String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
